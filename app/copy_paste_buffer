

<video controls="" id="{.id}" src="{.file}" Fullscreen=false ></video>
<button class="watch_button"id="bt{.id}">Watch {.name}!</button>


/** @module root/router */
'use strict';
const fs = require("fs");
const mongoose = require('mongoose');
const formidable = require('formidable');
mongoose.connect('mongodb://localhost/test');
const util =require('util')
const express = require('express');
const router = express.Router();

require('../../models/episode');
const Episode = mongoose.model('Episode');
require('../../models/saga');
const Saga = mongoose.model('Saga');
const login = require('connect-ensure-login');


router.get('/addep',login.ensureLoggedIn(),
function(req,res){
  res.render('home');
});
router.post('/addep',login.ensureLoggedIn(),
function(req,res){
  console.log(req.body);
  Saga.findById(req.body.sagaid,function(err, found){
      if (err) {
        res.status(404).end();
        return undefined;
      }else {
        if(found){
          console.log(found);
          res.render('addEpisode',found);
        }
      }
    });

});

router.get('/newsaga',
//login.ensureLoggedIn(),
function(req,res){
  res.render('newSaga');
});
router.post('/newsaga',function(req,res){
  console.log(1);
    var folderPath = './public/storage/saga_covers';
    var nname;
    var npath;
    var form = new formidable.IncomingForm();
    console.log(2);
    form.on('fileBegin', function(name, file) {
  		file.path = folderPath+file.name;
      nname = file.name;
      npath = file.path;
    });
    // form.on('end',function(err){
    //   if (err) {
    //     console.log('err end');
    //   }else {
    //     console.log('saved all');
    //     res.status(304,{'Location':'http://localhost:3000'});
    //     res.end();
    //   }
    // });
    console.log(3);
    form.maxFileSize = 1024*1024*1000;
    form.uploadDir=folderPath;
    form.encoding = 'utf-8';
    form.keepExtensions = true;
    form.multiples = false;
    console.log(4);
    form.parse(req, (err, fields, files)=>{
      console.log(5);
      console.log(files);
      console.log(util.inspect({fields: fields, files: files}));
      let incomingSaga = new Saga({name:req.body.sagaName, image:files.file.path.replace('./public', '.')});
      console.log(incomingSaga);
      incomingSaga.save(function(err,saved){
        if (err) {
          console.log('Error creating new Saga');
          res.redirect('/upload/newSaga');
        }else {
          console.log('saved new saga');
          console.log(saved);
          res.redirect('/upload');
        }
      });
    });
})






  // console.log(req.body);
  // let incomingSaga = new Saga({name:req.body.sagaName, image:'../storage/static_images/testimage.jpg'});
  // console.log(incomingSaga);
  // incomingSaga.save(function(err,saved){
  //   if (err) {
  //     console.log('Error creating new Saga');
  //     res.redirect('/upload/newSaga');
  //   }else {
  //     console.log('saved new saga');
  //     console.log(saved);
  //     res.redirect('/upload');
  //   }
  // });
});


router.get('/',
   login.ensureLoggedIn(),
  function(req, res){
      Saga.find({},function(err,foundAll){
          if (err) {
            res.render('upload');
          }else {
            var mod = {
              x : foundAll
            };
            console.log(mod);
            res.render('upload',mod);
          }});
  });


router.post('/',function(req, res){
  var folderPath = './public/storage/';
  var nname;
  var npath;
  var form = new formidable.IncomingForm();
  form.on('field',function(name,value){
  });
  form.on('progress', function(bytesReceived, bytesExpected) {
  });
  form.on('fileBegin', function(name, file) {
		file.path = folderPath+file.name;
    nname = file.name;
    npath = file.path;
  });
  form.on('end',function(err){
    if (err) {
      console.log('err end');
    }else {
      console.log('saved all');
      res.status(304,{'Location':'http://localhost:3000'});
      res.end();
    }
  });
  form.on('error',function(err){
    if (err) {
      console.log('err errror');
    }
  });
  form.maxFileSize = 1024*1024*10000;
  form.uploadDir=folderPath;
  form.encoding = 'utf-8';
  form.keepExtensions = true;
  form.multiples = true;
  form.parse(req, (err, fields, files)=>{
    console.log(util.inspect({fields: fields, files: files}));
    files.file.forEach((el)=>{
      console.log('KAKAKAkA');
      let incomingEp = new Episode({name:el.name , bookmarked:false, file : el.path.replace('./public', '.')});
      console.log(incomingEp);
      incomingEp.save(function (err, saved) {
        if (err) {
          console.log("err .save");
          res.status(500).end();
        }else {
          console.log('saved | '+el.name);
        }
      });
    });

  });
});



/** router for /upload */
module.exports = router;
